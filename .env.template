# Copy this file to .env and fill in your actual values.
# Do NOT commit the .env file to version control.

# MQTT Configuration
MQTT_BROKER_ADDRESS="YOUR_MQTT_BROKER_IP_OR_HOSTNAME"
MQTT_BROKER_PORT=1883
MQTT_USERNAME="YOUR_MQTT_USERNAME" # Optional, leave empty if none
MQTT_PASSWORD="YOUR_MQTT_PASSWORD" # Optional, leave empty if none
MQTT_TOPIC="homeassistant/text/splitflap/state" # Or your desired topic

# Telegram Configuration
TELEGRAM_BOT_TOKEN="YOUR_TELEGRAM_BOT_TOKEN" # Get this from BotFather on Telegram

# Split-Flap Display Configuration
DISPLAY_WIDTH=12 # Total number of characters/modules on the display
DISPLAY_JUSTIFY="center" # How to align the time ('left', 'center', 'right')

# Authorized Users (Comma-separated list of numeric Telegram User IDs)
AUTHORIZED_USER_IDS="123456789,987654321" # Replace with actual User IDs

# --- Home Assistant Integration (Optional) ---

# -- Webhook Integration --
# If set, the bot will trigger webhooks when the stopwatch starts/stops/quits.
# This allows HA to react, e.g., turning an automation off/on.
# Your Home Assistant instance URL (e.g., http://homeassistant.local:8123)
HA_URL=
# The webhook ID created in HA to be triggered when the stopwatch starts (/sw start)
HA_WEBHOOK_STOPWATCH_START=
# The webhook ID created in HA to be triggered when the stopwatch stops (/stop or /quit)
HA_WEBHOOK_STOPWATCH_STOP=

# -- Shelly Switch MQTT Control --
# If set, allows the /pw command to power cycle the display via an MQTT switch
HA_SHELLY_SWITCH_ENTITY_ID="switch.splitflap_shelly_switch_0" # The entity_id of the Shelly switch for power cycling
HA_MQTT_DISCOVERY_PREFIX="homeassistant" # Default HA MQTT discovery prefix (used for Shelly switch topic)

# Delay between MQTT publish commands to avoid overwhelming the display (seconds)
MQTT_PUBLISH_DELAY=0.1
